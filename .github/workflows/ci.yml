name: CI Pipeline

on:
  pull_request:
    branches: [main, develop]
  push:
    branches: [main, develop]

jobs:
  # Job 1: Frontend build and test
  frontend-build:
    name: Build & Test Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint
        continue-on-error: true # Don't fail build on lint errors initially

      - name: Build frontend
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/
          retention-days: 7

  # Job 3: Backend Lambda validation
  backend-validation:
    name: Validate Backend Lambdas
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Install and validate Lambda dependencies
        run: |
          # Check each Lambda has requirements.txt and valid Python syntax
          for lambda_dir in backend/lambdas/*/; do
            echo "Validating $lambda_dir"
            if [ -f "$lambda_dir/requirements.txt" ]; then
              pip install -r "$lambda_dir/requirements.txt" --target /tmp/lambda-deps
            fi
            if [ -f "$lambda_dir/handler.py" ]; then
              python -m py_compile "$lambda_dir/handler.py"
            fi
          done

      - name: Run backend tests
        run: |
          pip install pytest boto3 moto
          pytest backend/tests/ -v
        continue-on-error: true # Until tests are written

  # Job 4: Security scanning
  security-scan:
    name: Security & Dependency Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: "trivy-results.sarif"
        continue-on-error: true

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.pull_request.base.sha || 'HEAD~1' }}
          head: HEAD
        continue-on-error: true
